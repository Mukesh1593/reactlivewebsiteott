{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProject\\\\reactapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\n// For Calculation component\n\n/*import React from 'react';\r\nimport Heading from './Heading';\r\nimport Paragraph from './Paragraph'\r\nimport List from './List';\r\nimport {add, subs, multiflication, division} from './Calculation';\r\n\r\n\r\nfunction App() {\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<Heading />\r\n\t\t\t<Paragraph />\r\n\t\t\t<List />\r\n\r\n\t\t\t<ul>\r\n\t         <li>{add(50, 5)}</li>\r\n\t         <li>{subs(55, 5)}</li>\r\n\t         <li>{multiflication(50, 5)}</li>\r\n\t         <li>{division(55, 7)}</li>\r\n\t       </ul>\r\n\t\t</>\r\n\t\t);\r\n}\r\n\r\nexport default App;*/\n// **************For BookMyShow Stream mini project**************\n\n/*import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Cards from './Streamcards';\r\nimport Sdata from './Sdata';\r\nimport Action from './Action';\r\nimport Adventure from './Adventure';\r\nimport Horror from './Horror';\r\n\r\nconst favGener = \"Action\";\r\n\r\nconst FavG = () => {\r\nif (favGener === \"Action\") {\r\n\t\treturn (\r\n            <Action />\r\n           );\r\n}\r\nelse if (favGener === \"Adventure\") {\r\n\treturn (\r\n            <Adventure />\r\n           );\r\n}\r\nelse {\r\n\treturn(\r\n\t\t<Horror />\r\n\t\t);\r\n}\r\n\r\n};*/\n// **************With Ternary operater**************\n\n/*const App = () => (\r\n  <>\r\n  <h1 className=\"style_css\">Top Streaming On BookMyShow In 2021</h1>\r\n  // {<FavG />}\r\n  {favGener === \"Action\" ? <Action /> : <Adventure /> }\r\n   </>\r\n);\r\n\r\nexport default App;*/\n// **************Mini project for Slote Game**************\n\n/*import React from 'react';\r\n\r\nconst SlotM = (props) => {\r\n\r\n\r\n\tlet x = props.x;\r\n\tlet y = props.y;\r\n\tlet z = props.z;\r\n\r\n\tif ( x === y && y === z) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"slot_inner\">\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t{x} {y} {z}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<h1>This is matching.</h1>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"slot_inner\">\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t{x} {y} {z}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<h1>This is Not matching.</h1>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst App = () => {\r\n\treturn(\r\n\t\t<>\r\n\t\t<h1 className=\"headling_style\"> &#127920; Welcome to <span> Slot machine game </span> &#127920;</h1>\r\n\t\t<div className=\"slotmachine\">\r\n\t\t\t<SlotM x=\"ðŸ˜„\" y=\"ðŸ˜„\" z=\"ðŸ˜„\" />\r\n\t\t\t<SlotM x=\"ðŸ’—\" y=\"ðŸ˜„\" z=\"ðŸ¤ª\" />\r\n\t\t\t<SlotM x=\"ðŸ˜„\" y=\"ðŸ˜„\" z=\"ðŸ˜„\" />\r\n\t\t</div>\r\n\t\t</>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default App;*/\n// **************Hooks with increment on click**************\n\n/*import React, { useState } from 'react';\r\n\r\n\r\nconst App = () => {\r\n\tconst state = useState();\r\n\tconst [count, setCount] = useState(0);\r\n\r\n\tconst IncNum = () => {\r\n\t\tsetCount(count + 1);\r\n\r\n\t};\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className=\"incronbutton\">\r\n\t\t\t\t<h1>{count}</h1>\r\n\t\t\t\t<button onClick={IncNum}>Click Me</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t\t);\r\n};\r\n\r\nexport default App;*/\n// **************Local Time on click button**************\n\n/*import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n\r\n\tlet ctime = new Date().toLocaleTimeString();\r\n\r\n\tconst [time, newTime] = useState (ctime);\r\n\r\n\tconst MainTime = () => {\r\n\t\tctime = new Date().toLocaleTimeString();\r\n\t\tnewTime(ctime);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"incronbutton\">\r\n\t\t\t\t<h1>{time}</h1>\r\n\t\t\t\t<button onClick={MainTime}>Click Here</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t\t);\r\n};\r\n\r\nexport default App;*/\n// **************Local Time with setInterval**************\n\n/*import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n\tlet currTime = new Date().toLocaleTimeString();\r\n\r\n\tconst [LocTime, UpdateTime] = useState(currTime);\r\n\r\n\tconst MainUpdatedTime = () => {\r\n\t\tcurrTime = new Date().toLocaleTimeString();\r\n\t\tUpdateTime(currTime);\r\n\t};\r\n\tsetInterval(MainUpdatedTime, 1000);\r\n\treturn (\r\n\t\t\t\t<h1>{LocTime}</h1>\r\n\t\t);\r\n};\r\n\r\nexport default App;*/\n// **************Click Events**************\n\n/*import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n\r\n\tconst BgColor = 'red';\r\n\tconst [bg, setNewBg] = useState(BgColor);\r\n\r\n\tconst BtnColor = '#000';\r\n\tconst [btnbg, newBtnBg] = useState(BtnColor);\r\n\r\n\tconst [text, setText] = useState('Click Here');\r\n\r\n\tconst bgChange = () => {\r\n\t\tlet newBg = 'yellow';\r\n\t\tsetNewBg(newBg);\r\n\r\n\t\tsetText('Haye!! ðŸ’—');\r\n\r\n\t\tlet buttunColor = 'red';\r\n\t\tnewBtnBg(buttunColor);\r\n\r\n\t};\r\n\r\n\tconst bgBack = () => {\r\n\t\tlet bg1 = 'green';\r\n\t\tsetNewBg(bg1);\r\n\t\tsetText('Ohh No ðŸ¤ª');\r\n\r\n\t\tlet buttunColor1 = 'yellow';\r\n\t\tnewBtnBg(buttunColor1);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div style={{backgroundColor:bg }}>\r\n\t\t\t<button onClick={bgChange} onDoubleClick={bgBack}>{text}</button>\r\n\t\t\t<button style={{backgroundColor:btnbg }} onMouseOver={bgChange} onMouseOut={bgBack}>{text}</button>\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default App;*/\n// **************Create Form Feild**************\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [name, newName] = useState();\n  const [fullName, updatedName] = useState();\n  const [Pass, newPass] = useState();\n  const [userPass, NewUserPass] = useState('Patel');\n\n  const inputEvent = text => {\n    newName(text.target.value);\n  };\n\n  const inputPass = pass => {\n    NewPass(pass.target.value);\n  };\n\n  const inputDetails = () => {\n    UpdatedName(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Hello \", fullName, \" \", userPass]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Username\",\n        onChange: inputEvent,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"Passward\",\n        placeholder: \"Enter Passward\",\n        onChange: inputPass,\n        value: Pass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: inputDetails,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"pN0tTvPO+DTkLqj8Ot2R4bQUgCg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ReactProject/reactapp/src/App.jsx"],"names":["React","useState","App","name","newName","fullName","updatedName","Pass","newPass","userPass","NewUserPass","inputEvent","text","target","value","inputPass","pass","NewPass","inputDetails","UpdatedName"],"mappings":";;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,EAAhC;AAEA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,OAAD,CAAxC;;AAGA,QAAMU,UAAU,GAAIC,IAAD,IAAU;AAC5BR,IAAAA,OAAO,CAACQ,IAAI,CAACC,MAAL,CAAYC,KAAb,CAAP;AACA,GAFD;;AAIA,QAAMC,SAAS,GAAIC,IAAD,IAAU;AAC3BC,IAAAA,OAAO,CAACD,IAAI,CAACH,MAAL,CAAYC,KAAb,CAAP;AACA,GAFD;;AAIA,QAAMI,YAAY,GAAG,MAAM;AAC1BC,IAAAA,WAAW,CAAChB,IAAD,CAAX;AACA,GAFD;;AAIA,sBACC;AAAA,2BACC;AAAA,8BACC;AAAA,6BAAWE,QAAX,OAAsBI,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,gBAA/B;AAAgD,QAAA,QAAQ,EAAEE,UAA1D;AAAsE,QAAA,KAAK,EAAER;AAA7E;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,WAAW,EAAC,gBAAnC;AAAoD,QAAA,QAAQ,EAAEY,SAA9D;AAAyE,QAAA,KAAK,EAAER;AAAhF;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEW,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAUA,CAjCD;;GAAMhB,G;;KAAAA,G;AAmCN,eAAeA,GAAf","sourcesContent":["// For Calculation component\r\n\r\n/*import React from 'react';\r\nimport Heading from './Heading';\r\nimport Paragraph from './Paragraph'\r\nimport List from './List';\r\nimport {add, subs, multiflication, division} from './Calculation';\r\n\r\n\r\nfunction App() {\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<Heading />\r\n\t\t\t<Paragraph />\r\n\t\t\t<List />\r\n\r\n\t\t\t<ul>\r\n\t         <li>{add(50, 5)}</li>\r\n\t         <li>{subs(55, 5)}</li>\r\n\t         <li>{multiflication(50, 5)}</li>\r\n\t         <li>{division(55, 7)}</li>\r\n\t       </ul>\r\n\t\t</>\r\n\t\t);\r\n}\r\n\r\nexport default App;*/\r\n\r\n\r\n// **************For BookMyShow Stream mini project**************\r\n\r\n/*import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Cards from './Streamcards';\r\nimport Sdata from './Sdata';\r\nimport Action from './Action';\r\nimport Adventure from './Adventure';\r\nimport Horror from './Horror';\r\n\r\nconst favGener = \"Action\";\r\n\r\nconst FavG = () => {\r\nif (favGener === \"Action\") {\r\n\t\treturn (\r\n            <Action />\r\n           );\r\n}\r\nelse if (favGener === \"Adventure\") {\r\n\treturn (\r\n            <Adventure />\r\n           );\r\n}\r\nelse {\r\n\treturn(\r\n\t\t<Horror />\r\n\t\t);\r\n}\r\n\r\n};*/\r\n\r\n\r\n// **************With Ternary operater**************\r\n\r\n/*const App = () => (\r\n  <>\r\n  <h1 className=\"style_css\">Top Streaming On BookMyShow In 2021</h1>\r\n  // {<FavG />}\r\n  {favGener === \"Action\" ? <Action /> : <Adventure /> }\r\n   </>\r\n);\r\n\r\nexport default App;*/\r\n\r\n\r\n// **************Mini project for Slote Game**************\r\n\r\n/*import React from 'react';\r\n\r\nconst SlotM = (props) => {\r\n\r\n\r\n\tlet x = props.x;\r\n\tlet y = props.y;\r\n\tlet z = props.z;\r\n\r\n\tif ( x === y && y === z) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"slot_inner\">\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t{x} {y} {z}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<h1>This is matching.</h1>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"slot_inner\">\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t{x} {y} {z}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<h1>This is Not matching.</h1>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst App = () => {\r\n\treturn(\r\n\t\t<>\r\n\t\t<h1 className=\"headling_style\"> &#127920; Welcome to <span> Slot machine game </span> &#127920;</h1>\r\n\t\t<div className=\"slotmachine\">\r\n\t\t\t<SlotM x=\"ðŸ˜„\" y=\"ðŸ˜„\" z=\"ðŸ˜„\" />\r\n\t\t\t<SlotM x=\"ðŸ’—\" y=\"ðŸ˜„\" z=\"ðŸ¤ª\" />\r\n\t\t\t<SlotM x=\"ðŸ˜„\" y=\"ðŸ˜„\" z=\"ðŸ˜„\" />\r\n\t\t</div>\r\n\t\t</>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default App;*/\r\n\r\n\r\n// **************Hooks with increment on click**************\r\n\r\n/*import React, { useState } from 'react';\r\n\r\n\r\nconst App = () => {\r\n\tconst state = useState();\r\n\tconst [count, setCount] = useState(0);\r\n\r\n\tconst IncNum = () => {\r\n\t\tsetCount(count + 1);\r\n\r\n\t};\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className=\"incronbutton\">\r\n\t\t\t\t<h1>{count}</h1>\r\n\t\t\t\t<button onClick={IncNum}>Click Me</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t\t);\r\n};\r\n\r\nexport default App;*/\r\n\r\n\r\n\r\n// **************Local Time on click button**************\r\n\r\n/*import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n\r\n\tlet ctime = new Date().toLocaleTimeString();\r\n\r\n\tconst [time, newTime] = useState (ctime);\r\n\r\n\tconst MainTime = () => {\r\n\t\tctime = new Date().toLocaleTimeString();\r\n\t\tnewTime(ctime);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"incronbutton\">\r\n\t\t\t\t<h1>{time}</h1>\r\n\t\t\t\t<button onClick={MainTime}>Click Here</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t\t);\r\n};\r\n\r\nexport default App;*/\r\n\r\n\r\n\r\n// **************Local Time with setInterval**************\r\n\r\n/*import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n\tlet currTime = new Date().toLocaleTimeString();\r\n\r\n\tconst [LocTime, UpdateTime] = useState(currTime);\r\n\r\n\tconst MainUpdatedTime = () => {\r\n\t\tcurrTime = new Date().toLocaleTimeString();\r\n\t\tUpdateTime(currTime);\r\n\t};\r\n\tsetInterval(MainUpdatedTime, 1000);\r\n\treturn (\r\n\t\t\t\t<h1>{LocTime}</h1>\r\n\t\t);\r\n};\r\n\r\nexport default App;*/\r\n\r\n\r\n\r\n// **************Click Events**************\r\n\r\n/*import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n\r\n\tconst BgColor = 'red';\r\n\tconst [bg, setNewBg] = useState(BgColor);\r\n\r\n\tconst BtnColor = '#000';\r\n\tconst [btnbg, newBtnBg] = useState(BtnColor);\r\n\r\n\tconst [text, setText] = useState('Click Here');\r\n\r\n\tconst bgChange = () => {\r\n\t\tlet newBg = 'yellow';\r\n\t\tsetNewBg(newBg);\r\n\r\n\t\tsetText('Haye!! ðŸ’—');\r\n\r\n\t\tlet buttunColor = 'red';\r\n\t\tnewBtnBg(buttunColor);\r\n\r\n\t};\r\n\r\n\tconst bgBack = () => {\r\n\t\tlet bg1 = 'green';\r\n\t\tsetNewBg(bg1);\r\n\t\tsetText('Ohh No ðŸ¤ª');\r\n\r\n\t\tlet buttunColor1 = 'yellow';\r\n\t\tnewBtnBg(buttunColor1);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div style={{backgroundColor:bg }}>\r\n\t\t\t<button onClick={bgChange} onDoubleClick={bgBack}>{text}</button>\r\n\t\t\t<button style={{backgroundColor:btnbg }} onMouseOver={bgChange} onMouseOut={bgBack}>{text}</button>\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default App;*/\r\n\r\n\r\n\r\n\r\n// **************Create Form Feild**************\r\n\r\n\r\nimport React, { useState } from 'react';\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n\tconst [name, newName] = useState();\r\n\r\n\tconst [fullName, updatedName] = useState();\r\n\r\n\tconst [Pass, newPass] = useState();\r\n\r\n\tconst [userPass, NewUserPass] = useState('Patel');\r\n\r\n\r\n\tconst inputEvent = (text) => {\r\n\t\tnewName(text.target.value);\r\n\t};\r\n\r\n\tconst inputPass = (pass) => {\r\n\t\tNewPass(pass.target.value);\r\n\t};\r\n\r\n\tconst inputDetails = () => {\r\n\t\tUpdatedName(name);\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Hello {fullName} {userPass}</h2>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Enter Username\" onChange={inputEvent} value={name} />\r\n\t\t\t\t<input type=\"Passward\" placeholder=\"Enter Passward\" onChange={inputPass} value={Pass} />\r\n\t\t\t\t<button className=\"btn\" onClick={inputDetails} >Submit</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t\t);\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}